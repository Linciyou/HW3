version: 0.1
project:
  id: spam-analytics
  name: Spam Analytics Toolkit
  description: >
    Research-oriented workflow for exploring, modeling, and presenting the SMS Spam dataset.
    Includes preprocessing stages, evaluation metrics, CLI automation, and a Streamlit dashboard.

datasets:
  - id: sms_spam_v1
    path: dataset.csv
    format: csv
    has_header: false
    columns:
      - name: label
        type: categorical
        description: Message label (`ham` or `spam`).
      - name: text
        type: string
        description: Raw SMS message content.
    usage:
      train: true
      evaluate: true
      visualize: true

artifacts:
  - id: model_bundle
    path: artifacts/model.joblib
    description: Serialized scikit-learn pipeline containing text vectorizer and classifier.
  - id: preprocessing_cache
    path: artifacts/preprocessing_steps.parquet
    description: Snapshot of preprocessing steps for each message.
  - id: metrics_report
    path: reports/metrics.json
    description: Evaluation metrics (accuracy, precision, recall, f1, roc_auc).
  - id: figures
    path: reports/figures/
    description: Generated plots for dataset insights and model diagnostics.

workflows:
  - id: cli_training
    name: Train via CLI
    entrypoint: spam-analytics model train --config spam_analytics/config.yaml
    summary: >
      Load dataset, run preprocessing pipeline, train classifier, persist artifacts, and log metrics.
    inputs:
      - sms_spam_v1
    outputs:
      - model_bundle
      - preprocessing_cache
      - metrics_report
    steps:
      - id: load_dataset
        description: Read dataset.csv and coerce to canonical schema.
      - id: preprocess_text
        description: Run normalization, tokenization, stopword removal, stemming, and feature generation.
      - id: vectorize
        description: Fit TF-IDF vectorizer with char and word n-grams.
      - id: train_model
        description: Fit logistic regression classifier with class balancing.
      - id: evaluate_model
        description: Produce cross-validation and hold-out metrics; dump to reports/metrics.json.
      - id: persist_artifacts
        description: Save trained pipeline and preprocessing snapshot to artifacts/.

  - id: cli_visualize
    name: Generate visual summaries
    entrypoint: spam-analytics visualize report
    summary: >
      Create plots that explore class balance, message lengths, token frequencies, and evaluation diagnostics.
    inputs:
      - sms_spam_v1
      - metrics_report
    outputs:
      - figures

  - id: streamlit_dashboard
    name: Streamlit Dashboard
    entrypoint: streamlit run streamlit_app.py
    summary: >
      Interactive dashboard for data inspection, preprocessing previews, model metrics, and inference.
    inputs:
      - sms_spam_v1
      - preprocessing_cache
      - metrics_report
      - model_bundle

